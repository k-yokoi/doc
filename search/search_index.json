{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My Docs Technical documentation for me. This is built with MkDocs . \u81ea\u5206\u7528\u306e\u6280\u8853\u30e1\u30e2\u3002 MkDocs \u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002","title":"Welcome to My Docs"},{"location":"#welcome-to-my-docs","text":"Technical documentation for me. This is built with MkDocs . \u81ea\u5206\u7528\u306e\u6280\u8853\u30e1\u30e2\u3002 MkDocs \u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002","title":"Welcome to My Docs"},{"location":"Spring/Spring%20Cloud%20Gateway/","text":"Spring Cloud Gateway \u7279\u5fb4 Spring Framework\u3001Spring Boot \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528 \u69d8\u3005\u306a\u8981\u7d20\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a URL\u30d1\u30b9 \u30d8\u30c3\u30c0\u30fc\u3084\u30af\u30c3\u30ad\u30fc\u306e\u5024 \u30e1\u30bd\u30c3\u30c9\uff08GET\u3001POST\u306a\u3069\uff09 \u6642\u9593\uff08\u3007\u6642\u4ee5\u524d\u3001\u4ee5\u964d\u306a\u3069\uff09 \u30ea\u30af\u30a8\u30b9\u30c8\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5185\u5bb9\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u66f8\u304d\u63db\u3048 \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u30fc\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u6a5f\u80fd\u3068\u306e\u7d71\u5408\u3082\u53ef\u80fd WebFlux\u3092\u7528\u3044\u305f\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u901a\u4fe1\u306b\u3088\u308a\u3001\u30a2\u30af\u30bb\u30b9\u5897\u52a0\u306b\u3082\u5bfe\u5fdc Netflix \u304b\u3089 Zuul \u3068\u3044\u3046\u985e\u4f3c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u304c\u3001WebFlux \u3092\u7528\u3044\u305f\u3068\u304d\u306eSpring\u3068\u306e\u76f8\u6027\u554f\u984c\u306b\u3088\u308a\u3001 Spring Cloud Gateway \u304c\u63a8\u5968\u3055\u308c\u3066\u308b \u4f7f\u3044\u65b9 \u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-gateway</artifactId> </dependency> RouteLocator Bean \u3092\u4f5c\u6210\u3059\u308b\u3002 @Bean public RouteLocator myRoutes(RouteLocatorBuilder builder) { return builder.routes().build(); } \u5168\u30a2\u30af\u30bb\u30b9\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3002 builder.routes() .route(\"monolith\", p -> p .path(\"/**\") .uri(\"http://localhost:8081\")) .build(); \u30d1\u30b9\u30d9\u30fc\u30b9\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 builder.routes() .route(\"hello\", p -> p .path(\"/hello/**\") .uri(\"http://localhost:8082\")) .route(\"monolith\", p -> p .path(\"/**\") .uri(\"http://localhost:8081\")) .build(); \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u3092\u6709\u52b9\u306b\u3059\u308b \u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> </dependency> application.property \u306b\u8ffd\u8a18\u3059\u308b\u3002 spring.cloud.gateway.discovery.locator.enabled=true \u5185\u90e8\u3067Ribbon\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u3066 ReactiveLoadBalancerClientFilter \u3092\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3002 spring.cloud.loadbalancer.ribbon.enabled=false Spring Cloud Gateway \u304b\u3089\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u5229\u7528\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001 lb://[hoge] \u3067\u30a2\u30af\u30bb\u30b9\u3002 \u3053\u308c\u3060\u3051\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u6a5f\u80fd\u3082\u5229\u7528\u3067\u304d\u308b\u3002 builder.routes() .route(\"hello\", p -> p .path(\"/hello/**\") .uri(\"lb://hello\")) \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u3092\u6709\u52b9\u306b\u3059\u308b \u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId> </dependency> \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3001\u6709\u52b9\u306b\u3059\u308b\u3002 .route(\"hello\", p -> p .path(\"/hello/**\") .filters(f -> f .circuitBreaker(c -> c .setName(\"myCircuitBreaker\") .setFallbackUri(\"forward:/fallbackhello\"))) .uri(\"lb://hello\"))","title":"Spring Cloud Gateway"},{"location":"Spring/Spring%20Cloud%20Gateway/#spring-cloud-gateway","text":"","title":"Spring Cloud Gateway"},{"location":"Spring/Spring%20Cloud%20Gateway/#_1","text":"Spring Framework\u3001Spring Boot \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528 \u69d8\u3005\u306a\u8981\u7d20\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a URL\u30d1\u30b9 \u30d8\u30c3\u30c0\u30fc\u3084\u30af\u30c3\u30ad\u30fc\u306e\u5024 \u30e1\u30bd\u30c3\u30c9\uff08GET\u3001POST\u306a\u3069\uff09 \u6642\u9593\uff08\u3007\u6642\u4ee5\u524d\u3001\u4ee5\u964d\u306a\u3069\uff09 \u30ea\u30af\u30a8\u30b9\u30c8\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5185\u5bb9\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u66f8\u304d\u63db\u3048 \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u30fc\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u6a5f\u80fd\u3068\u306e\u7d71\u5408\u3082\u53ef\u80fd WebFlux\u3092\u7528\u3044\u305f\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u901a\u4fe1\u306b\u3088\u308a\u3001\u30a2\u30af\u30bb\u30b9\u5897\u52a0\u306b\u3082\u5bfe\u5fdc Netflix \u304b\u3089 Zuul \u3068\u3044\u3046\u985e\u4f3c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u304c\u3001WebFlux \u3092\u7528\u3044\u305f\u3068\u304d\u306eSpring\u3068\u306e\u76f8\u6027\u554f\u984c\u306b\u3088\u308a\u3001 Spring Cloud Gateway \u304c\u63a8\u5968\u3055\u308c\u3066\u308b","title":"\u7279\u5fb4"},{"location":"Spring/Spring%20Cloud%20Gateway/#_2","text":"\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-gateway</artifactId> </dependency> RouteLocator Bean \u3092\u4f5c\u6210\u3059\u308b\u3002 @Bean public RouteLocator myRoutes(RouteLocatorBuilder builder) { return builder.routes().build(); } \u5168\u30a2\u30af\u30bb\u30b9\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3002 builder.routes() .route(\"monolith\", p -> p .path(\"/**\") .uri(\"http://localhost:8081\")) .build(); \u30d1\u30b9\u30d9\u30fc\u30b9\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 builder.routes() .route(\"hello\", p -> p .path(\"/hello/**\") .uri(\"http://localhost:8082\")) .route(\"monolith\", p -> p .path(\"/**\") .uri(\"http://localhost:8081\")) .build();","title":"\u4f7f\u3044\u65b9"},{"location":"Spring/Spring%20Cloud%20Gateway/#_3","text":"\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> </dependency> application.property \u306b\u8ffd\u8a18\u3059\u308b\u3002 spring.cloud.gateway.discovery.locator.enabled=true \u5185\u90e8\u3067Ribbon\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u3066 ReactiveLoadBalancerClientFilter \u3092\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3002 spring.cloud.loadbalancer.ribbon.enabled=false Spring Cloud Gateway \u304b\u3089\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u5229\u7528\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001 lb://[hoge] \u3067\u30a2\u30af\u30bb\u30b9\u3002 \u3053\u308c\u3060\u3051\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u6a5f\u80fd\u3082\u5229\u7528\u3067\u304d\u308b\u3002 builder.routes() .route(\"hello\", p -> p .path(\"/hello/**\") .uri(\"lb://hello\"))","title":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u3092\u6709\u52b9\u306b\u3059\u308b"},{"location":"Spring/Spring%20Cloud%20Gateway/#_4","text":"\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId> </dependency> \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3001\u6709\u52b9\u306b\u3059\u308b\u3002 .route(\"hello\", p -> p .path(\"/hello/**\") .filters(f -> f .circuitBreaker(c -> c .setName(\"myCircuitBreaker\") .setFallbackUri(\"forward:/fallbackhello\"))) .uri(\"lb://hello\"))","title":"\u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u3092\u6709\u52b9\u306b\u3059\u308b"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/","text":"Spring Cloud Netflix Eureka \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3002 Eureka \u30b5\u30fc\u30d0\u30fc\u3068 Eureka \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e2\u3064\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3002 \u53c2\u8003 \u30b5\u30fc\u30d3\u30b9\u767b\u9332\u304a\u3088\u3073\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea Spring I/O 2018 \u5831\u544a\u4f1a - Spring Cloud Gateway / Spring Cloud Pipelines Eureka \u30b5\u30fc\u30d0\u30fc \u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0 \u4f9d\u5b58\u95a2\u4fc2\u3092 pom.xml \u306b\u8ffd\u52a0\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId> </dependency> @EnableEurekaServer \u306e\u8ffd\u52a0 Eureka \u30b5\u30fc\u30d3\u30b9\u30ec\u30b8\u30b9\u30c8\u30ea \u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u3001@EnableEurekaServer \u306e\u8ffd\u52a0\u3002 package com.example.serviceregistrationanddiscoveryservice; ...... @EnableEurekaServer @SpringBootApplication public class ServiceRegistrationAndDiscoveryServiceApplication { public static void main(String[] args) { SpringApplication.run(ServiceRegistrationAndDiscoveryServiceApplication.class, args); } } \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a \u30c6\u30b9\u30c8\u76ee\u7684\u306e\u8a2d\u5b9a\u3092\u8a18\u8ff0\u3002 \u4e0b\u8a18\u306e\u8a18\u8ff0\u3067\u306f\u672c\u756a\u74b0\u5883\u306b\u9069\u3055\u306a\u3044\u70b9\u306b\u6ce8\u610f\u3002 server.port=8761 eureka.client.register-with-eureka=false eureka.client.fetch-registry=false logging.level.com.netflix.eureka=OFF logging.level.com.netflix.discovery=OFF \u8d77\u52d5 mvn spring-boot:run Eureka \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0 \u4f9d\u5b58\u95a2\u4fc2\u3092 pom.xml \u306b\u8ffd\u52a0\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> </dependency> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId> </dependency> @EnableDiscoveryClient \u306e\u8ffd\u52a0 package com.example.serviceregistrationanddiscoveryclient; ...... @EnableDiscoveryClient @SpringBootApplication public class ServiceRegistrationAndDiscoveryClientApplication { public static void main(String[] args) { SpringApplication.run(ServiceRegistrationAndDiscoveryClientApplication.class, args); } } \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a Eureka \u30b5\u30fc\u30d0\u306b\u767b\u9332\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u540d\u3092\u8a2d\u5b9a spring.application.name=[client neme]","title":"Spring Cloud Netflix Eureka"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#spring-cloud-netflix-eureka","text":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3002 Eureka \u30b5\u30fc\u30d0\u30fc\u3068 Eureka \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e2\u3064\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3002","title":"Spring Cloud Netflix Eureka"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#_1","text":"\u30b5\u30fc\u30d3\u30b9\u767b\u9332\u304a\u3088\u3073\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea Spring I/O 2018 \u5831\u544a\u4f1a - Spring Cloud Gateway / Spring Cloud Pipelines","title":"\u53c2\u8003"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#eureka","text":"","title":"Eureka \u30b5\u30fc\u30d0\u30fc"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#_2","text":"\u4f9d\u5b58\u95a2\u4fc2\u3092 pom.xml \u306b\u8ffd\u52a0\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId> </dependency>","title":"\u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#enableeurekaserver","text":"Eureka \u30b5\u30fc\u30d3\u30b9\u30ec\u30b8\u30b9\u30c8\u30ea \u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u3001@EnableEurekaServer \u306e\u8ffd\u52a0\u3002 package com.example.serviceregistrationanddiscoveryservice; ...... @EnableEurekaServer @SpringBootApplication public class ServiceRegistrationAndDiscoveryServiceApplication { public static void main(String[] args) { SpringApplication.run(ServiceRegistrationAndDiscoveryServiceApplication.class, args); } }","title":"@EnableEurekaServer \u306e\u8ffd\u52a0"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#_3","text":"\u30c6\u30b9\u30c8\u76ee\u7684\u306e\u8a2d\u5b9a\u3092\u8a18\u8ff0\u3002 \u4e0b\u8a18\u306e\u8a18\u8ff0\u3067\u306f\u672c\u756a\u74b0\u5883\u306b\u9069\u3055\u306a\u3044\u70b9\u306b\u6ce8\u610f\u3002 server.port=8761 eureka.client.register-with-eureka=false eureka.client.fetch-registry=false logging.level.com.netflix.eureka=OFF logging.level.com.netflix.discovery=OFF","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#_4","text":"mvn spring-boot:run","title":"\u8d77\u52d5"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#eureka_1","text":"","title":"Eureka \u30af\u30e9\u30a4\u30a2\u30f3\u30c8"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#_5","text":"\u4f9d\u5b58\u95a2\u4fc2\u3092 pom.xml \u306b\u8ffd\u52a0\u3002 <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> </dependency> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId> </dependency>","title":"\u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#enablediscoveryclient","text":"package com.example.serviceregistrationanddiscoveryclient; ...... @EnableDiscoveryClient @SpringBootApplication public class ServiceRegistrationAndDiscoveryClientApplication { public static void main(String[] args) { SpringApplication.run(ServiceRegistrationAndDiscoveryClientApplication.class, args); } }","title":"@EnableDiscoveryClient \u306e\u8ffd\u52a0"},{"location":"Spring/Spring%20Cloud%20Netflix%20Eureka/#_6","text":"Eureka \u30b5\u30fc\u30d0\u306b\u767b\u9332\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u540d\u3092\u8a2d\u5b9a spring.application.name=[client neme]","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8a2d\u5b9a"},{"location":"Spring/Spring%20Cloud%20Netflix/","text":"Spring Cloud Netflix Spring Cloud Netflix \u306f\u9806\u6b21\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u79fb\u884c\u4e2d \u53c2\u8003 what happens in spring cloud netflix Modules In Maintenance Mode Spring Cloud Netflix Eureka \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3002 Eureka \u306f\u73fe\u6642\u70b9\u3067\u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u5bfe\u8c61\u3067\u306f\u306a\u3044\u304c\u3001Spring Cloud Zookeeper \u3078\u306e\u79fb\u884c\u304c\u691c\u8a0e\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u5642\u3082\u3042\u308b\u3002 Spring Cloud Netflix Ribbon \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u3002 Spring Cloud Netflix Ribbon \u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u3002 Spring Cloud Load Balancer \u3078\u306e\u79fb\u884c\u304c\u63a8\u5968\u3002 Spring Cloud Netflix Zuul API\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3002 Spring Cloud Netflix Zuul \u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u3002 Spring Cloud Gateway \u3078\u306e\u79fb\u884c\u304c\u63a8\u5968\u3002 Spring Cloud Netflix Hystrix \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u3002 Spring Cloud Netflix Hystrix \u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u3002 Spring Cloud Circuit Breaker + Resilience4J \u3078\u306e\u79fb\u884c\u304c\u63a8\u5968\u3002","title":"Spring Cloud Netflix"},{"location":"Spring/Spring%20Cloud%20Netflix/#spring-cloud-netflix","text":"Spring Cloud Netflix \u306f\u9806\u6b21\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u79fb\u884c\u4e2d","title":"Spring Cloud Netflix"},{"location":"Spring/Spring%20Cloud%20Netflix/#_1","text":"what happens in spring cloud netflix Modules In Maintenance Mode","title":"\u53c2\u8003"},{"location":"Spring/Spring%20Cloud%20Netflix/#spring-cloud-netflix-eureka","text":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3002 Eureka \u306f\u73fe\u6642\u70b9\u3067\u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u5bfe\u8c61\u3067\u306f\u306a\u3044\u304c\u3001Spring Cloud Zookeeper \u3078\u306e\u79fb\u884c\u304c\u691c\u8a0e\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u5642\u3082\u3042\u308b\u3002","title":"Spring Cloud Netflix Eureka"},{"location":"Spring/Spring%20Cloud%20Netflix/#spring-cloud-netflix-ribbon","text":"\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u3002 Spring Cloud Netflix Ribbon \u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u3002 Spring Cloud Load Balancer \u3078\u306e\u79fb\u884c\u304c\u63a8\u5968\u3002","title":"Spring Cloud Netflix Ribbon"},{"location":"Spring/Spring%20Cloud%20Netflix/#spring-cloud-netflix-zuul","text":"API\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3002 Spring Cloud Netflix Zuul \u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u3002 Spring Cloud Gateway \u3078\u306e\u79fb\u884c\u304c\u63a8\u5968\u3002","title":"Spring Cloud Netflix Zuul"},{"location":"Spring/Spring%20Cloud%20Netflix/#spring-cloud-netflix-hystrix","text":"\u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u3002 Spring Cloud Netflix Hystrix \u306f\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30e2\u30fc\u30c9\u3078\u3002 Spring Cloud Circuit Breaker + Resilience4J \u3078\u306e\u79fb\u884c\u304c\u63a8\u5968\u3002","title":"Spring Cloud Netflix Hystrix"},{"location":"aws/s3/","text":"S3 \u540c\u671f\u30b3\u30de\u30f3\u30c9 \u4f8b aws s3 sync --profile hoge --delete ./public s3://xxxxxxxxxxxxxxxxx","title":"S3"},{"location":"aws/s3/#s3","text":"","title":"S3"},{"location":"aws/s3/#_1","text":"\u4f8b aws s3 sync --profile hoge --delete ./public s3://xxxxxxxxxxxxxxxxx","title":"\u540c\u671f\u30b3\u30de\u30f3\u30c9"},{"location":"docker/docker_cheatsheet/","text":"Docker \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8 \u3088\u304f\u4f7f\u3046\u4f8b docker build -t yokoikzk/hoge:latest . docker run -d -p 8080:80 httpd docker images docker rmi [\u30a4\u30e1\u30fc\u30b8ID] docker ps -a docker rm [\u30b3\u30f3\u30c6\u30caID] \u30a4\u30e1\u30fc\u30b8 \u30a4\u30e1\u30fc\u30b8\u306e\u4f5c\u6210 docker build -t [\u30a4\u30e1\u30fc\u30b8\u540d] [\u30c7\u30a3\u30ec\u30af\u30c8\u30ea] docker build -t yokoikzk/hoge . \u30a4\u30e1\u30fc\u30b8\u306e\u8d77\u52d5 docker run -d -p [\u30db\u30b9\u30c8\u5074port]:[\u30b3\u30f3\u30c6\u30ca\u5074port] [\u30a4\u30e1\u30fc\u30b8\u540d] docker run -d -p 8081:8080 yokoikzk/hoge \u30aa\u30d7\u30b7\u30e7\u30f3 \u8aac\u660e \u4f8b -d \u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u5b9f\u884c docker run -d centos -p [\u30db\u30b9\u30c8\u5074]:[\u30b3\u30f3\u30c6\u30ca\u5074] \u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0 docker run -d -p 8080:80 httpd -it Docker\u306e\u30a4\u30e1\u30fc\u30b8\u5185\u306b\u30ed\u30b0\u30a4\u30f3 docker run -it ubuntu \u30a4\u30e1\u30fc\u30b8\u306e\u78ba\u8a8d docker images \u30a4\u30e1\u30fc\u30b8\u306e\u524a\u9664 docker rmi [\u30a4\u30e1\u30fc\u30b8ID] \u30b3\u30f3\u30c6\u30ca \u30b3\u30f3\u30c6\u30ca\u306e\u78ba\u8a8d \u52d5\u3044\u3066\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u78ba\u8a8d docker ps \u505c\u6b62\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u78ba\u8a8d docker ps -a \u30b3\u30f3\u30c6\u30ca\u306e\u524a\u9664 docker rm [\u30b3\u30f3\u30c6\u30caID] Docker\u3092sudo\u306a\u3057\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5 docker\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210 sudo groupadd docker \u30e6\u30fc\u30b6\u30fc\u3092docker\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0 sudo usermod -aG docker $USER \u30b0\u30eb\u30fc\u30d7\u3092\u5909\u66f4 newgrp docker sudo\u304c\u306a\u304f\u3066\u3082docker\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d docker run hello-world \u53c2\u8003: Manage Docker as a non-root user","title":"Docker \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8"},{"location":"docker/docker_cheatsheet/#docker","text":"","title":"Docker \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8"},{"location":"docker/docker_cheatsheet/#_1","text":"docker build -t yokoikzk/hoge:latest . docker run -d -p 8080:80 httpd docker images docker rmi [\u30a4\u30e1\u30fc\u30b8ID] docker ps -a docker rm [\u30b3\u30f3\u30c6\u30caID]","title":"\u3088\u304f\u4f7f\u3046\u4f8b"},{"location":"docker/docker_cheatsheet/#_2","text":"","title":"\u30a4\u30e1\u30fc\u30b8"},{"location":"docker/docker_cheatsheet/#_3","text":"docker build -t [\u30a4\u30e1\u30fc\u30b8\u540d] [\u30c7\u30a3\u30ec\u30af\u30c8\u30ea] docker build -t yokoikzk/hoge .","title":"\u30a4\u30e1\u30fc\u30b8\u306e\u4f5c\u6210"},{"location":"docker/docker_cheatsheet/#_4","text":"docker run -d -p [\u30db\u30b9\u30c8\u5074port]:[\u30b3\u30f3\u30c6\u30ca\u5074port] [\u30a4\u30e1\u30fc\u30b8\u540d] docker run -d -p 8081:8080 yokoikzk/hoge \u30aa\u30d7\u30b7\u30e7\u30f3 \u8aac\u660e \u4f8b -d \u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u5b9f\u884c docker run -d centos -p [\u30db\u30b9\u30c8\u5074]:[\u30b3\u30f3\u30c6\u30ca\u5074] \u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0 docker run -d -p 8080:80 httpd -it Docker\u306e\u30a4\u30e1\u30fc\u30b8\u5185\u306b\u30ed\u30b0\u30a4\u30f3 docker run -it ubuntu","title":"\u30a4\u30e1\u30fc\u30b8\u306e\u8d77\u52d5"},{"location":"docker/docker_cheatsheet/#_5","text":"docker images","title":"\u30a4\u30e1\u30fc\u30b8\u306e\u78ba\u8a8d"},{"location":"docker/docker_cheatsheet/#_6","text":"docker rmi [\u30a4\u30e1\u30fc\u30b8ID]","title":"\u30a4\u30e1\u30fc\u30b8\u306e\u524a\u9664"},{"location":"docker/docker_cheatsheet/#_7","text":"","title":"\u30b3\u30f3\u30c6\u30ca"},{"location":"docker/docker_cheatsheet/#_8","text":"","title":"\u30b3\u30f3\u30c6\u30ca\u306e\u78ba\u8a8d"},{"location":"docker/docker_cheatsheet/#_9","text":"docker ps","title":"\u52d5\u3044\u3066\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u78ba\u8a8d"},{"location":"docker/docker_cheatsheet/#_10","text":"docker ps -a","title":"\u505c\u6b62\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u78ba\u8a8d"},{"location":"docker/docker_cheatsheet/#_11","text":"docker rm [\u30b3\u30f3\u30c6\u30caID]","title":"\u30b3\u30f3\u30c6\u30ca\u306e\u524a\u9664"},{"location":"docker/docker_cheatsheet/#dockersudo","text":"docker\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210 sudo groupadd docker \u30e6\u30fc\u30b6\u30fc\u3092docker\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0 sudo usermod -aG docker $USER \u30b0\u30eb\u30fc\u30d7\u3092\u5909\u66f4 newgrp docker sudo\u304c\u306a\u304f\u3066\u3082docker\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d docker run hello-world \u53c2\u8003: Manage Docker as a non-root user","title":"Docker\u3092sudo\u306a\u3057\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5"}]}